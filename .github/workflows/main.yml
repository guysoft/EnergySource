# Whenever a push is made to the master branch then run the job
on: 
  repository_dispatch:
  push:
    branches:
      - main
      - workflow
      - linux-workflow

jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Job name, can be anything
    name: Export Game Job
    steps:
      # Always include the checkout step so that 
      # your project is available for Godot to export
    - name: checkout
      uses: actions/checkout@v2.3.1
      # Ensure that you get the entire project history
      with:
        fetch-depth: 0
    - name: Copy in assets
      run: |
        mkdir -p src/addons
        wget https://github.com/GodotVR/godot_openxr/releases/download/1.1.0/godot-openxr.zip
        unzip *.zip
        mkdir src/build
        mv  godot_openxr_1.1.0/addons/godot-openxr src/addons
        
        wget https://github.com/GodotVR/godot-xr-tools/archive/96361bbbc6066dc5418d52e8a05dc3d0ca630dcb.zip
        unzip godot-xr-tools-96361bbbc6066dc5418d52e8a05dc3d0ca630dcb.zip
        mv godot-xr-tools-96361bbbc6066dc5418d52e8a05dc3d0ca630dcb/addons/godot-xr-tools src/addons
    - name: export game
      # Use latest version (see releases for all versions)
      uses: firebelley/godot-export@v2.8.0
      with:
        # Defining all the required inputs
        # I used the mono version of Godot in this example
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/3.3/Godot_v3.3-stable_linux_headless.64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/3.3/Godot_v3.3-stable_export_templates.tpz
        relative_project_path: ./src
      env:
        GITHUB_TOKEN: ${{ secrets.AGITHUB_TOKEN }}
        LANG: "en_US.UTF-8"
    - name: "â¬† Upload build artifact"
      uses: actions/upload-artifact@v2
      if: github.event_name == 'push'
      with:
        name: Energy-source-linux.x86_64
        path: src/build/Energy-source-linux.x86_64

